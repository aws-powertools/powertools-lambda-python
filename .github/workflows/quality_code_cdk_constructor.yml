name: Code quality - CDK constructor

# PROCESS
#
# 1. Install all dependencies and spin off containers for all supported Python versions
# 2. Run code formatters and linters (various checks) for code standard
# 3. Run static typing checker for potential bugs
# 4. Run entire test suite for regressions except end-to-end (unit, functional, performance)
# 5. Run static analysis (in addition to CodeQL) for common insecure code practices
# 6. Run complexity baseline to avoid error-prone bugs and keep maintenance lower
# 7. Collect and report on test coverage

# USAGE
#
# Always triggered on new PRs, PR changes and PR merge.


on:
  pull_request:
    paths:
      - "layer/layer_constructors/**"
    branches:
      - develop
      - v3
  push:
    paths:
        - "layer/layer_constructors/**"
    branches:
      - develop
      - v3

permissions:
  contents: read

jobs:
  quality_check:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    env:
      PYTHON: "${{ matrix.python-version }}"
    permissions:
      contents: read  # checkout code only
    defaults:
      run:
        working-directory: ./layer_v3/layer_constructors
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.0.0
        with:
          platforms: arm64
        # NOTE: we need QEMU to build Layer against a different architecture (e.g., ARM)
      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1
        with:
          install: true
          driver: docker
          platforms: linux/amd64,linux/arm64
      - name: Install dependencies
        run: |
            pip install --upgrade pip pre-commit poetry
            poetry install
      - name: Test with pytest
        run: poetry run pytest tests
